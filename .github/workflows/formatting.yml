name: Code Formatting and Linting

on:
    push:
    workflow_dispatch:

jobs:
    formatting:
        runs-on: ubuntu-latest
        container: catthehacker/ubuntu:act-latest
        steps:
        -   name: Check out repository
            uses: actions/checkout@v4

        -   name: Set up python
            id: setup-python
            uses: actions/setup-python@v5
            with:
                python-version: "3.12"

        -   name: Install Poetry
            uses: snok/install-poetry@v1
            with:
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true

        -   name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}

        -   name: Install dependencies
            if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            run: poetry install --no-interaction

        -   name: Install project
            run: poetry install --no-interaction

        -   name: Run ruff check
            run: poetry run ruff check .

        -   name: Run mypy check
            run: poetry run mypy --config-file pyproject.toml .
